# Dependencies and Setup
import pandas as pd
from pathlib import Path

# File to Load (Remember to Change These)
school_data_to_load = Path("Resources/schools_complete.csv")
student_data_to_load = Path("Resources/students_complete.csv")

# Read School and Student Data File and store into Pandas DataFrames
school_data = pd.read_csv(school_data_to_load)
student_data = pd.read_csv(student_data_to_load)

# Combine the data into a single dataset.  
school_data_complete = pd.merge(student_data, school_data, how="left", on=["school_name", "school_name"])
school_data_complete.head()

# Calculate the total number of unique schools
school_count = school_data_complete["school_name"].value_counts()
school_count

# Calculate the total number of students
student_count = school_data_complete["student_name"].value_counts()
student_count

# Calculate the total budget
total_budget = school_data_complete["budget"].sum()
total_budget

# Calculate the average (mean) math score
average_math_score = school_data_complete["math_score"].mean()
average_math_score

# Calculate the average (mean) reading score
average_reading_score = school_data_complete["reading_score"].mean()
average_reading_score

# Use the following to calculate the percentage of students who passed math (math scores greather than or equal to 70)
passing_math_count = school_data_complete[(school_data_complete["math_score"] >= 70)].count()["student_name"]
passing_math_percentage = passing_math_count / (student_count) * 100
passing_math_percentage 

# Calculate the percentage of students who passed reading (hint: look at how the math percentage was calculated)  
passing_reading_count = school_data_complete[(school_data_complete["reading_score"] >= 70)].count()["student_name"]
passing_reading_percentage = passing_reading_count / (student_count) *100
passing_reading_percentage

# Use the following to calculate the percentage of students that passed math and reading
passing_math_reading_count = school_data_complete[
    (school_data_complete["math_score"] >= 70) & (school_data_complete["reading_score"] >= 70)
].count()["student_name"]
overall_passing_rate = passing_math_reading_count / (student_count) * 100
overall_passing_rate

import pandas as pd

# Assuming you have the necessary variables defined (e.g., school_count, student_count, total_budget, etc.)

# Create a high-level snapshot of the district's key metrics in a DataFrame
district_summary = pd.DataFrame(
    {
        "Total Schools": [school_count],
        "Total Students": [student_count],
        "Total Budget": [total_budget],
        "Average Math Score": [average_math_score],
        "Average Reading Score": [average_reading_score],
        "%Passing Math": [passing_math_percentage],
        "%Passing Reading": [passing_reading_percentage],
        "%Overall Passing": [overall_passing_rate]
    }
)

# Formatting
format_dict = {
    "Total Students": "{:,}",
    "Total Budget": "${:,.2f}",
    "%Passing Math": "{:.2f}%",
    "%Passing Reading": "{:.2f}%",
    "%Overall Passing": "{:.2f}%"
}

# Apply formatting using style.format
styled_district_summary = district_summary.style.format(format_dict)

# Display the styled DataFrame
styled_district_summary
